/*
|--------------------------------------------------------------------------
| app
|--------------------------------------------------------------------------
|
| Created by puguohong on 27/07/2017.
| 
|
*/
/*
|--------------------------------------------------------------------------
| _variables
|--------------------------------------------------------------------------
|
| Created by puguohong on 27/07/2017.
| 
|
*/
/* |-------------------------------------------------------------------------- | _mixins |-------------------------------------------------------------------------- | | Created by puguo on 8/28/2017. |  | */
/*
|--------------------------------------------------------------------------
| _common
|--------------------------------------------------------------------------
|
| Created by puguohong on 27/07/2017.
| 
|
*/
body { background-color: #f3f3f3; color: #616161; font-family: "Microsoft YaHei", sans-serif; }

blockquote { padding: 0 1rem; border-left: 0.25em solid #e9ecef; margin-bottom: 1rem; font-size: 16px; color: #868e96; font-weight: 300; }

blockquote > :first-child { margin-top: 0; }

.box-shadow { -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12) !important; box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12) !important; }

.my-contribute-soup-list pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: #f8f9fa; border-radius: 3px; }

/*
|--------------------------------------------------------------------------
| _callout
|--------------------------------------------------------------------------
|
| Created by puguohong on 27/07/2017.
| Copied from October demo theme
|
*/
.callout { margin-bottom: 20px; padding: 20px; border-left: 3px solid #dee2e6; background-color: #f8f9fa; }

.callout h4 { margin-top: 0; margin-bottom: 5px; font-size: 20px; }

.callout p:last-child { margin-bottom: 0; }

.callout-success { background-color: #edfbf0; border-color: #c4f1ce; }

.callout-success h4 { color: #28a745; }

.callout-info { background-color: #ebfafd; border-color: #beeff7; }

.callout-info h4 { color: #17a2b8; }

.callout-warning { background-color: #fffaed; border-color: #ffeeba; }

.callout-warning h4 { color: #ffc107; }

.callout-danger { background-color: #fceced; border-color: #f6cdd1; }

.callout-danger h4 { color: #dc3545; }

/*
|--------------------------------------------------------------------------
| _headline
|--------------------------------------------------------------------------
|
| Created by puguohong on 27/07/2017.
| 
|
*/
.headline { display: block; margin: 30px 0 20px 0; border-bottom: 1px dotted #e4e9f0; }

.headline h2 { font-size: 22px; }

.headline h2, .headline h3, .headline h4 { margin: 0 0 -2px 0; padding-bottom: 5px; display: inline-block; border-bottom: 3px solid #fd7e14; }

.headline h2 a, .headline h3 a, .headline h4 a { color: #333; }

.headline-primary h2, .headline-primary h3, .headline-primary h4 { border-bottom: 3px solid #007bff; }

.headline-success h2, .headline-success h3, .headline-success h4 { border-bottom: 3px solid #28a745; }

.headline-info h2, .headline-info h3, .headline-info h4 { border-bottom: 3px solid #17a2b8; }

.headline-danger h2, .headline-danger h3, .headline-danger h4 { border-bottom: 3px solid #dc3545; }

.headline-warning h2, .headline-warning h3, .headline-warning h4 { border-bottom: 3px solid #ffc107; }

.headline-v2 { display: block; background: #fff; padding: 1px 10px; margin: 0 0 20px 0; border-left: 3px solid #ffc107; }

.headline-v2 h2 { color: #000; margin: 3px 0; font-size: 20px; font-weight: 200; }

.headline-v2-primary { border-left: 3px solid #007bff; }

.headline-v2-success { border-left: 3px solid #28a745; }

.headline-v2-info { border-left: 3px solid #17a2b8; }

.headline-v2-warning { border-left: 3px solid #ffc107; }

.headline-v2-danger { border-left: 3px solid #dc3545; }

.headline-v3 { text-align: center; margin-bottom: 40px; }

.headline-v3 h2 { font-size: 2rem; text-transform: uppercase; }

.headline-v3 p { font-size: 1rem; color: rgba(0, 0, 0, 0.4); }

.headline-v3-primary h2, .headline-v3-primary h3, .headline-v3-primary h4 { color: #007bff; }

.headline-v3-success h2, .headline-v3-success h3, .headline-v3-success h4 { color: #28a745; }

.headline-v3-info h2, .headline-v3-info h3, .headline-v3-info h4 { color: #17a2b8; }

.headline-v3-danger h2, .headline-v3-danger h3, .headline-v3-danger h4 { color: #dc3545; }

.headline-v3-warning h2, .headline-v3-warning h3, .headline-v3-warning h4 { color: #ffc107; }

/*
|--------------------------------------------------------------------------
| _comment
|--------------------------------------------------------------------------
|
| Created by puguohong on 28/07/2017.
| use BEM https://en.bem.info/methodology/
| naming schemes : Two Dashes Stye  'block-name__element_name--mod-name'
| depend on bootstrap v4 list-group component
*/
.comment { -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; -webkit-box-align: start; -ms-flex-align: start; align-items: flex-start; width: 100%; position: relative; }

.comment__header { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; }

.comment__header-avatar { width: 50px; height: 50px; border-radius: 25px; }

.comment__header-author { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; }

.comment__content-at { font-size: 1rem; }

.comment__action { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; -webkit-box-align: center; -ms-flex-align: center; align-items: center; font-size: 1.3rem; }

.comment__action-like { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; -webkit-box-align: center; -ms-flex-align: center; align-items: center; }

.post-comment { background-color: #fff; padding: 20px; width: 100%; }

.post-comment--no-padding { padding: 0; }

.comment__delete { position: absolute; right: 20px; top: 12px; }

/*
|--------------------------------------------------------------------------
| _card
|--------------------------------------------------------------------------
|
| Created by puguohong on 31/07/2017.
| 
|
*/
.card-soup .card-soup__content { font-size: 18px; margin-bottom: 15px; position: relative; overflow: hidden; }

.card-soup .card-soup__content pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: #f8f9fa; border-radius: 3px; }

.card-soup .card-soup__more { position: absolute; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-flow: row wrap; flex-flow: row wrap; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; bottom: 0; width: 100%; background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0.2)), color-stop(rgba(255, 255, 255, 0.4)), color-stop(rgba(255, 255, 255, 0.6)), color-stop(rgba(255, 255, 255, 0.8)), to(white)); background-image: -o-linear-gradient(rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.8), white); background-image: linear-gradient(rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.8), white); padding: 40px 0 0 0; }

.card-soup .card-soup__more > a { color: #616161; }

.card-soup .card-soup__more > a:hover { text-decoration: none; }

@media (min-width: 576px) { .card-columns--two-col { -webkit-column-count: 2; column-count: 2; -webkit-column-gap: 1.25rem; column-gap: 1.25rem; }
  .card-columns--two-col .card { display: inline-block; width: 100%; } }

.navbar-white { -webkit-box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.15); box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.15); }

.navbar-white .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-white .navbar-brand:focus, .navbar-white .navbar-brand:hover { color: rgba(0, 0, 0, 0.9); }

.navbar-white .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); font-size: 1.1rem; }

.navbar-white .navbar-nav .nav-link:focus, .navbar-white .navbar-nav .nav-link:hover { color: rgba(0, 0, 0, 0.7); }

.navbar-white .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-white .navbar-nav .show > .nav-link, .navbar-white .navbar-nav .active > .nav-link, .navbar-white .navbar-nav .nav-link.show, .navbar-white .navbar-nav .nav-link.active { color: rgba(0, 0, 0, 0.9); }

.navbar-white .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rgba(0, 0, 0, 0.1); }

.navbar-white .navbar-toggler-icon { background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"); }

.navbar-white .navbar-text { color: rgba(0, 0, 0, 0.5); }

/*
|--------------------------------------------------------------------------
| _footer
|--------------------------------------------------------------------------
|
| Created by puguohong on 18/10/2017.
| 
|
*/
.footer { padding: 15px 0; }

.footer .footer__copyrights { margin: 0; font-size: 14px; }

.footer .footer__autor { color: rgba(0, 0, 0, 0.6); }

.slick-home-collections .slick-slide { padding: 0 15px; }

.slick-home-collections .slick-list { margin: 0 -15px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
